---
import Layout from "../../layouts/Layout.astro";

// Get the current folder path from URL
const currentPath = Astro.url.pathname;
console.log("Current Path:", currentPath);
const category = currentPath.split('/').filter(Boolean).pop()?.toString();
console.log("Category:", category);

// Get all markdown files in the current directory
const posts = await Astro.glob('./*.md');

// Sort posts by date in descending order
const sortedPosts = posts.sort((a, b) => {
    return new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime();
});

// Function to calculate read time
function getReadingTime(content) {
    const wordsPerMinute = 200;
    const words = content.split(/\s+/).length;
    return Math.ceil(words / wordsPerMinute);
}

// Function to get default image if none provided
function getDefaultImage(category: string) {
    const defaultImages = {
        'news': '/images/default-news.jpg',
        'health': '/images/default-health.jpg',
        'information': '/images/default-info.jpg',
    };
    return defaultImages[category.toLowerCase()] || '/images/default-blog.jpg';
}
---

<Layout title={`${category} Blog Posts`}>
    <main class="min-h-screen text-gray-100">
        <div class="max-w-6xl mx-auto px-4 py-12">
            {/* Header Section */}
            <div class="text-center mb-12">
                <h1 class="text-4xl font-bold mb-4 capitalize bg-gradient-to-r from-blue-400 to-purple-500 text-transparent bg-clip-text">
                    {category} Articles
                </h1>
                <p class="text-gray-400">Discover the latest insights and stories</p>
            </div>
            
            {/* Grid Layout */}
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                {sortedPosts.map((post) => {
                    const readingTime = getReadingTime(post.rawContent());
                    const date = new Date(post.frontmatter.date);
                    const image = post.frontmatter.image || (category ? getDefaultImage(category) : '/images/default-blog.jpg');
                    
                    return (
                        <article class="group bg-gray-800 rounded-xl overflow-hidden border border-gray-700 hover:border-blue-500 hover:-translate-y-1 transition-all duration-300 hover:shadow-2xl hover:shadow-blue-500/10">
                            <a href={post.url} class="block h-full">
                                {/* Image Container */}
                                <div class="aspect-w-16 aspect-h-9 overflow-hidden bg-gray-700">
                                    <img 
                                        src={image} 
                                        alt={post.frontmatter.imageAlt || post.frontmatter.title}
                                        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                                    />
                                </div>

                                {/* Content Container */}
                                <div class="p-6">
                                    {/* Category Badge */}
                                    <div class="mb-4">
                                        <span class="inline-block px-3 py-1 text-sm font-semibold text-blue-300 bg-blue-900/40 rounded-full">
                                            {category}
                                        </span>
                                    </div>
                                    
                                    {/* Title */}
                                    <h2 class="text-xl font-bold mb-3 text-gray-100 group-hover:text-blue-400 transition-colors line-clamp-2">
                                        {post.frontmatter.title}
                                    </h2>
                                    
                                    {/* Description */}
                                    {post.frontmatter.description && (
                                        <p class="text-gray-400 mb-4 line-clamp-2">
                                            {post.frontmatter.description}
                                        </p>
                                    )}
                                    
                                    {/* Metadata Footer */}
                                    <div class="flex items-center justify-between mt-4 pt-4 border-t border-gray-700 text-sm text-gray-400">
                                        <div class="flex items-center space-x-2">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                            </svg>
                                            <time datetime={date.toISOString()}>
                                                {date.toLocaleDateString('en-US', {
                                                    year: 'numeric',
                                                    month: 'short',
                                                    day: 'numeric'
                                                })}
                                            </time>
                                        </div>
                                        
                                        <div class="flex items-center space-x-2">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                                            </svg>
                                            <span>{readingTime} min read</span>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        </article>
                    );
                })}
            </div>
        </div>
    </main>
</Layout>