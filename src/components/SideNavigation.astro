---
import { Icon } from 'astro-icon/components';
import { navTabs } from '../data/navigation';

interface Props {
  categories?: Array<{
    title: string;
    slug: string;
    icon?: string;
  }>;
}

const { categories = [] } = Astro.props;
---

<div id="side-navigation" class="lg:hidden">
  <!-- Side Navigation Trigger -->
  <button id="side-nav-trigger" class="text-white text-2xl focus:outline-none">
    â˜°
  </button>

  <!-- Side Navigation Overlay -->
  <div id="side-nav-overlay" class="fixed inset-0 bg-black bg-opacity-75 z-50 hidden transition-opacity duration-300"></div>

  <!-- Side Navigation Content -->
  <div id="side-nav-content" class="fixed inset-y-0 right-0 w-64 bg-[#1E1E1E] z-50 transform translate-x-full transition-transform duration-300 ease-in-out">
    <div class="flex justify-end p-4">
      <button id="side-nav-close" class="text-white text-2xl focus:outline-none">
        &times;
      </button>
    </div>
    <nav class="p-4">
      <ul class="space-y-4">
        {navTabs.map((tab) => {
          if (tab.type === "separator") {
            return <div class="mx-1 h-[1px] bg-gray-700" aria-hidden="true"></div>;
          }

          if (tab.title === "Blog") {
            return (
              <li class="relative">
                <button
                  id="blog-dropdown-trigger"
                  class="flex items-center justify-between w-full text-gray-300 hover:text-white transition-colors duration-200"
                >
                  <div class="flex items-center">
                    <Icon name={tab.icon} size={20} class="mr-2" />
                    <span>{tab.title}</span>
                  </div>
                  <Icon 
                    name="lucide:chevron-down" 
                    size={20} 
                    class="transform transition-transform duration-200" 
                    id="blog-dropdown-icon"
                  />
                </button>
                <ul 
                  id="blog-dropdown" 
                  class="pl-6 mt-2 space-y-2 hidden transition-all duration-300 ease-in-out"
                >
                  {categories.map((category) => (
                    <li>
                      <a
                        href={`/generated-blog/${category.slug}`}
                        class="flex items-center text-gray-400 hover:text-white transition-colors duration-200 py-2"
                      >
                        {category.icon && (
                          <Icon name={category.icon} size={20} class="mr-2" />
                        )}
                        <span>{category.title}</span>
                      </a>
                    </li>
                  ))}
                </ul>
              </li>
            );
          }

          return (
            <li>
              <a
                href={tab.href}
                class="flex items-center text-gray-300 hover:text-white transition-colors duration-200"
              >
                <Icon name={tab.icon} size={20} class="mr-2" />
                <span>{tab.title}</span>
              </a>
            </li>
          );
        })}
      </ul>
    </nav>
    <!-- Footer -->
    <div class="absolute bottom-0 left-0 right-0 p-4 border-t border-gray-700">
      <div class="flex items-center space-x-2">
        <img src="/logo.png" alt="Logo" class="w-8 h-8" />
        <span class="text-white text-lg font-bold">Pickleball Info</span>
      </div>
      <p class="mt-2 text-xs text-gray-400">
        &copy; {new Date().getFullYear()} Pickleball Guide. All rights reserved.
      </p>
    </div>
  </div>
</div>

<script>
  // Mobile side navigation toggle
  const sideNavTrigger = document.getElementById('side-nav-trigger');
  const sideNavOverlay = document.getElementById('side-nav-overlay');
  const sideNavContent = document.getElementById('side-nav-content');
  const sideNavClose = document.getElementById('side-nav-close');
  const blogDropdownTrigger = document.getElementById('blog-dropdown-trigger');
  const blogDropdown = document.getElementById('blog-dropdown');
  const blogDropdownIcon = document.getElementById('blog-dropdown-icon');

  // Open Side Navigation
  sideNavTrigger?.addEventListener('click', () => {
    sideNavOverlay?.classList.remove('hidden');
    setTimeout(() => {
      sideNavOverlay?.classList.remove('opacity-0');
      sideNavContent?.classList.remove('translate-x-full');
    }, 10);
  });

  // Close Side Navigation
  const closeSideNav = () => {
    sideNavOverlay?.classList.add('opacity-0');
    sideNavContent?.classList.add('translate-x-full');
    setTimeout(() => {
      sideNavOverlay?.classList.add('hidden');
    }, 300);
  };

  sideNavClose?.addEventListener('click', closeSideNav);
  sideNavOverlay?.addEventListener('click', closeSideNav);

  // Blog Dropdown Toggle
  let isDropdownOpen = false;
  
  blogDropdownTrigger?.addEventListener('click', () => {
    isDropdownOpen = !isDropdownOpen;
    if (isDropdownOpen) {
      blogDropdown?.classList.remove('hidden');
      blogDropdownIcon?.classList.add('rotate-180');
      // Animate items
      const items = blogDropdown?.querySelectorAll('li');
      items?.forEach((item, index) => {
        item.style.opacity = '0';
        item.style.transform = 'translateY(-10px)';
        setTimeout(() => {
          item.style.opacity = '1';
          item.style.transform = 'translateY(0)';
        }, index * 100);
      });
    } else {
      blogDropdown?.classList.add('hidden');
      blogDropdownIcon?.classList.remove('rotate-180');
    }
  });
</script>

<style>
  #blog-dropdown li {
    opacity: 0;
    transform: translateY(-10px);
    transition: all 0.3s ease-out;
  }
</style>